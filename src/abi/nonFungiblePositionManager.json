{
  "abi": [
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },

    {
      "type": "function",
      "name": "tokenOfOwnerByIndex",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }, 
        { "name": "index", "type": "uint256", "internalType": "uint256" }

      ],
      "outputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "balance", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collect",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct INonfungiblePositionManagerStruct.CollectParams",
          "components": [
            { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount0Max",
              "type": "uint128",
              "internalType": "uint128"
            },
            {
              "name": "amount1Max",
              "type": "uint128",
              "internalType": "uint128"
            }
          ]
        }
      ],
      "outputs": [
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "decreaseLiquidity",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams",
          "components": [
            { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidity",
              "type": "uint128",
              "internalType": "uint128"
            },
            {
              "name": "amount0Min",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount1Min",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseLiquidity",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams",
          "components": [
            { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "amount0Desired",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount1Desired",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount0Min",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount1Min",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        { "name": "liquidity", "type": "uint128", "internalType": "uint128" },
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "positions",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "nonce", "type": "uint96", "internalType": "uint96" },
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "token0", "type": "address", "internalType": "address" },
        { "name": "token1", "type": "address", "internalType": "address" },
        { "name": "fee", "type": "uint24", "internalType": "uint24" },
        { "name": "tickLower", "type": "int24", "internalType": "int24" },
        { "name": "tickUpper", "type": "int24", "internalType": "int24" },
        { "name": "liquidity", "type": "uint128", "internalType": "uint128" },
        {
          "name": "feeGrowthInside0LastX128",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "feeGrowthInside1LastX128",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "tokensOwed0", "type": "uint128", "internalType": "uint128" },
        { "name": "tokensOwed1", "type": "uint128", "internalType": "uint128" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundETH",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "collect((uint256,address,uint128,uint128))": "fc6f7865",
    "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
    "getApproved(uint256)": "081812fc",
    "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
    "isApprovedForAll(address,address)": "e985e9c5",
    "ownerOf(uint256)": "6352211e",
    "positions(uint256)": "99fbab88",
    "refundETH()": "12210e8a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManagerStruct.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=lib/gsn/packages/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/staking/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xa245c9ecc1cc0b605fa1938d79c1e877c466326eac9c7076049c27ecaa2c247a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7f0b5a6c443bdd46f650c18fa7acdf6bf4b2095f1681040f5ae6bad9671da63\",\"dweb:/ipfs/QmYswCJZu6UiNtBwEP5pJfudbVQZhmcAiaqUkqypiJGZeK\"]},\"src/staking/interfaces/INonfungiblePositionManagerStruct.sol\":{\"keccak256\":\"0x06ef9d06e8f25c257557cc31537de88846af2e654d0cb5068ed43f2966bd3dc5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0e562e5e3907376e7da0e6b357fc6765ea949af5412439081cd79d6294625f4\",\"dweb:/ipfs/Qmb4bebRbSpJzGRBKjAGKGAVJz2dqSbZPxVMmXLX2XM55o\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "balance", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "struct INonfungiblePositionManagerStruct.CollectParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Max",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Max",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "collect",
          "outputs": [
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0Min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "decreaseLiquidity",
          "outputs": [
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0Desired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Desired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0Min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "increaseLiquidity",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            { "internalType": "uint96", "name": "nonce", "type": "uint96" },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "address", "name": "token0", "type": "address" },
            { "internalType": "address", "name": "token1", "type": "address" },
            { "internalType": "uint24", "name": "fee", "type": "uint24" },
            { "internalType": "int24", "name": "tickLower", "type": "int24" },
            { "internalType": "int24", "name": "tickUpper", "type": "int24" },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside0LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside1LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "tokensOwed0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "tokensOwed1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "burn(uint256)": {
            "params": { "tokenId": "The ID of the token that is being burned" }
          },
          "collect((uint256,address,uint128,uint128))": {
            "params": {
              "params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
            },
            "returns": {
              "amount0": "The amount of fees collected in token0",
              "amount1": "The amount of fees collected in token1"
            }
          },
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
            "params": {
              "params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
            },
            "returns": {
              "amount0": "The amount of token0 accounted to the position's tokens owed",
              "amount1": "The amount of token1 accounted to the position's tokens owed"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
            "params": {
              "params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
            },
            "returns": {
              "amount0": "The amount of token0 to acheive resulting liquidity",
              "amount1": "The amount of token1 to acheive resulting liquidity",
              "liquidity": "The new liquidity amount as a result of the increase"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "positions(uint256)": {
            "details": "Throws if the token ID is not valid.",
            "params": {
              "tokenId": "The ID of the token that represents the position"
            },
            "returns": {
              "fee": "The fee associated with the pool",
              "feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
              "feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
              "liquidity": "The liquidity of the position",
              "nonce": "The nonce for permits",
              "operator": "The address that is approved for spending",
              "tickLower": "The lower end of the tick range for the position",
              "tickUpper": "The higher end of the tick range for the position",
              "token0": "The address of the token0 for a specific pool",
              "token1": "The address of the token1 for a specific pool",
              "tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
              "tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
          },
          "collect((uint256,address,uint128,uint128))": {
            "notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
          },
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
            "notice": "Decreases the amount of liquidity in a position and accounts it to the position"
          },
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
          },
          "positions(uint256)": {
            "notice": "Returns the position information associated with a given token ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@opengsn/=lib/gsn/packages/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "gsn/=lib/gsn/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/staking/interfaces/INonfungiblePositionManager.sol": "INonfungiblePositionManager"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/staking/interfaces/INonfungiblePositionManager.sol": {
        "keccak256": "0xa245c9ecc1cc0b605fa1938d79c1e877c466326eac9c7076049c27ecaa2c247a",
        "urls": [
          "bzz-raw://f7f0b5a6c443bdd46f650c18fa7acdf6bf4b2095f1681040f5ae6bad9671da63",
          "dweb:/ipfs/QmYswCJZu6UiNtBwEP5pJfudbVQZhmcAiaqUkqypiJGZeK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/staking/interfaces/INonfungiblePositionManagerStruct.sol": {
        "keccak256": "0x06ef9d06e8f25c257557cc31537de88846af2e654d0cb5068ed43f2966bd3dc5",
        "urls": [
          "bzz-raw://d0e562e5e3907376e7da0e6b357fc6765ea949af5412439081cd79d6294625f4",
          "dweb:/ipfs/Qmb4bebRbSpJzGRBKjAGKGAVJz2dqSbZPxVMmXLX2XM55o"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/interfaces/INonfungiblePositionManager.sol",
    "id": 89914,
    "exportedSymbols": {
      "IERC165": [50673],
      "IERC721": [47231],
      "INonfungiblePositionManager": [89913],
      "INonfungiblePositionManagerStruct": [89949]
    },
    "nodeType": "SourceUnit",
    "src": "45:4652:118",
    "nodes": [
      {
        "id": 89832,
        "nodeType": "PragmaDirective",
        "src": "45:24:118",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 89833,
        "nodeType": "ImportDirective",
        "src": "70:58:118",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89914,
        "sourceUnit": 47232,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89834,
        "nodeType": "ImportDirective",
        "src": "129:49:118",
        "nodes": [],
        "absolutePath": "src/staking/interfaces/INonfungiblePositionManagerStruct.sol",
        "file": "./INonfungiblePositionManagerStruct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89914,
        "sourceUnit": 89950,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89913,
        "nodeType": "ContractDefinition",
        "src": "180:4516:118",
        "nodes": [
          {
            "id": 89868,
            "nodeType": "FunctionDefinition",
            "src": "1432:490:118",
            "nodes": [],
            "documentation": {
              "id": 89839,
              "nodeType": "StructuredDocumentation",
              "src": "270:1157:118",
              "text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
            },
            "functionSelector": "99fbab88",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "positions",
            "nameLocation": "1441:9:118",
            "parameters": {
              "id": 89842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89841,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1468:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1460:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:31:118"
            },
            "returnParameters": {
              "id": 89867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89844,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1549:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1542:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 89843,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89846,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1576:8:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1568:16:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89848,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "1606:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1598:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89850,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1634:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1626:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89852,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1661:3:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1654:10:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 89851,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89854,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nameLocation": "1684:9:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1678:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 89853,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89856,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nameLocation": "1713:9:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1707:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 89855,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89858,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "1744:9:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1736:17:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89857,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89860,
                  "mutability": "mutable",
                  "name": "feeGrowthInside0LastX128",
                  "nameLocation": "1775:24:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1767:32:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89862,
                  "mutability": "mutable",
                  "name": "feeGrowthInside1LastX128",
                  "nameLocation": "1821:24:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1813:32:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89864,
                  "mutability": "mutable",
                  "name": "tokensOwed0",
                  "nameLocation": "1867:11:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1859:19:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89863,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89866,
                  "mutability": "mutable",
                  "name": "tokensOwed1",
                  "nameLocation": "1900:11:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89868,
                  "src": "1892:19:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89865,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:393:118"
            },
            "scope": 89913,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89881,
            "nodeType": "FunctionDefinition",
            "src": "2754:161:118",
            "nodes": [],
            "documentation": {
              "id": 89869,
              "nodeType": "StructuredDocumentation",
              "src": "1928:821:118",
              "text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
            },
            "functionSelector": "219f5d17",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseLiquidity",
            "nameLocation": "2763:17:118",
            "parameters": {
              "id": 89873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89872,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2823:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89881,
                  "src": "2790:39:118",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$89928_calldata_ptr",
                    "typeString": "struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams"
                  },
                  "typeName": {
                    "id": 89871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89870,
                      "name": "IncreaseLiquidityParams",
                      "nameLocations": ["2790:23:118"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89928,
                      "src": "2790:23:118"
                    },
                    "referencedDeclaration": 89928,
                    "src": "2790:23:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$89928_storage_ptr",
                      "typeString": "struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:55:118"
            },
            "returnParameters": {
              "id": 89880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89875,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2870:9:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89881,
                  "src": "2862:17:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89874,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89877,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "2889:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89881,
                  "src": "2881:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2881:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89879,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "2906:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89881,
                  "src": "2898:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2861:53:118"
            },
            "scope": 89913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89892,
            "nodeType": "FunctionDefinition",
            "src": "3628:142:118",
            "nodes": [],
            "documentation": {
              "id": 89882,
              "nodeType": "StructuredDocumentation",
              "src": "2921:702:118",
              "text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
            },
            "functionSelector": "0c49ccbe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseLiquidity",
            "nameLocation": "3637:17:118",
            "parameters": {
              "id": 89886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89885,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "3697:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89892,
                  "src": "3664:39:118",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$89939_calldata_ptr",
                    "typeString": "struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams"
                  },
                  "typeName": {
                    "id": 89884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89883,
                      "name": "DecreaseLiquidityParams",
                      "nameLocations": ["3664:23:118"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89939,
                      "src": "3664:23:118"
                    },
                    "referencedDeclaration": 89939,
                    "src": "3664:23:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$89939_storage_ptr",
                      "typeString": "struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3654:55:118"
            },
            "returnParameters": {
              "id": 89891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89888,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "3744:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89892,
                  "src": "3736:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3736:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89890,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "3761:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89892,
                  "src": "3753:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3735:34:118"
            },
            "scope": 89913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89903,
            "nodeType": "FunctionDefinition",
            "src": "4270:108:118",
            "nodes": [],
            "documentation": {
              "id": 89893,
              "nodeType": "StructuredDocumentation",
              "src": "3776:489:118",
              "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
            },
            "functionSelector": "fc6f7865",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collect",
            "nameLocation": "4279:7:118",
            "parameters": {
              "id": 89897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89896,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4310:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89903,
                  "src": "4287:29:118",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectParams_$89948_calldata_ptr",
                    "typeString": "struct INonfungiblePositionManagerStruct.CollectParams"
                  },
                  "typeName": {
                    "id": 89895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89894,
                      "name": "CollectParams",
                      "nameLocations": ["4287:13:118"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89948,
                      "src": "4287:13:118"
                    },
                    "referencedDeclaration": 89948,
                    "src": "4287:13:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectParams_$89948_storage_ptr",
                      "typeString": "struct INonfungiblePositionManagerStruct.CollectParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4286:31:118"
            },
            "returnParameters": {
              "id": 89902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89899,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "4352:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89903,
                  "src": "4344:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89901,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "4369:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89903,
                  "src": "4361:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4361:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4343:34:118"
            },
            "scope": 89913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89909,
            "nodeType": "FunctionDefinition",
            "src": "4602:48:118",
            "nodes": [],
            "documentation": {
              "id": 89904,
              "nodeType": "StructuredDocumentation",
              "src": "4384:213:118",
              "text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
            },
            "functionSelector": "42966c68",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "4611:4:118",
            "parameters": {
              "id": 89907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89906,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4624:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 89909,
                  "src": "4616:15:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:17:118"
            },
            "returnParameters": {
              "id": 89908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4649:0:118"
            },
            "scope": 89913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89912,
            "nodeType": "FunctionDefinition",
            "src": "4656:38:118",
            "nodes": [],
            "functionSelector": "12210e8a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundETH",
            "nameLocation": "4665:9:118",
            "parameters": {
              "id": 89910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:2:118"
            },
            "returnParameters": {
              "id": 89911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4693:0:118"
            },
            "scope": 89913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 89835,
              "name": "INonfungiblePositionManagerStruct",
              "nameLocations": ["221:33:118"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89949,
              "src": "221:33:118"
            },
            "id": 89836,
            "nodeType": "InheritanceSpecifier",
            "src": "221:33:118"
          },
          {
            "baseName": {
              "id": 89837,
              "name": "IERC721",
              "nameLocations": ["256:7:118"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47231,
              "src": "256:7:118"
            },
            "id": 89838,
            "nodeType": "InheritanceSpecifier",
            "src": "256:7:118"
          }
        ],
        "canonicalName": "INonfungiblePositionManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [89913, 47231, 50673, 89949],
        "name": "INonfungiblePositionManager",
        "nameLocation": "190:27:118",
        "scope": 89914,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 118
}
